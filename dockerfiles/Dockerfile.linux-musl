# Pin to specific image digest for immutability
# alpine:3.19.0 as of 2025-10-21
# To update: docker pull alpine:3.19.0 && docker inspect alpine:3.19.0 | grep "Id"
FROM alpine:3.19.0@sha256:51b67269f354137895d43f3b3d810bfacd3945438e94dc5ac55fdac340352f48

LABEL alpine.version="3.19.0"

ARG POSTGRESQL_VERSION

RUN echo "POSTGRESQL_VERSION=$POSTGRESQL_VERSION"
RUN apk update
# Pin all package versions for reproducibility
# Last updated: 2025-10-21 (Alpine 3.19.0)
# Update procedure: See docs/DEPENDENCY-UPDATES.md
RUN apk add --no-cache \
      bash=5.2.21-r0 \
      bison=3.8.2-r1 \
      clang16=16.0.6-r5 \
      dpkg=1.22.1-r0 \
      dpkg-dev=1.22.1-r0 \
      e2fsprogs-dev=1.47.0-r5 \
      flex=2.6.4-r6 \
      g++=13.2.1_git20231014-r0 \
      gcc=13.2.1_git20231014-r0 \
      gettext-dev=0.22.3-r0 \
      git=2.43.7-r0 \
      icu-dev=74.1-r1 \
      krb5-dev=1.21.3-r0 \
      libc-dev=0.7.2-r5 \
      libxml2-dev=2.11.8-r3 \
      libxslt-dev=1.1.39-r1 \
      linux-headers=6.5-r0 \
      llvm16-dev=16.0.6-r7 \
      lz4=1.9.4-r5 \
      lz4-dev=1.9.4-r5 \
      make=4.4.1-r2 \
      musl-dev=1.2.4_git20230717-r5 \
      openssl-dev=3.1.8-r1 \
      ossp-uuid-dev=1.6.2-r4 \
      patchelf=0.18.0-r3 \
      perl=5.38.5-r0 \
      perl-dev=5.38.5-r0 \
      perl-ipc-run=20231003.0-r0 \
      perl-utils=5.38.5-r0 \
      python3=3.11.14-r0 \
      python3-dev=3.11.14-r0 \
      readline-dev=8.2.1-r2 \
      util-linux-dev=2.39.3-r0 \
      zlib-dev=1.3.1-r0 \
      zstd-dev=1.5.5-r8

# Clone PostgreSQL source code
RUN branch=$(echo "$POSTGRESQL_VERSION" | awk -F. '{print "REL_"$1"_"$2}') && \
    tag=$(echo "$POSTGRESQL_VERSION" | awk -F. '{print "REL_"$1"_"$2}') && \
    echo "branch=$branch, tag=$tag" && \
    for i in $(seq 1 5); do \
        git clone --depth 1 --branch $branch https://git.postgresql.org/git/postgresql.git /usr/src/postgresql && \
        cd /usr/src/postgresql && \
        git fetch --depth=1 origin "refs/tags/$tag:refs/tags/$tag" && \
        git checkout "$tag" && \
        break || { cd / && rm -rf /usr/src/postgresql && sleep 3; }; \
    done && \
    test -d /usr/src/postgresql || { echo "ERROR: Failed to clone PostgreSQL source"; exit 1; }

WORKDIR /usr/src/postgresql

ENV CLANG=clang-16
ENV LLVM_CONFIG="/usr/lib/llvm16/bin/llvm-config"

RUN major_version=$(echo "$POSTGRESQL_VERSION" | awk -F. '{print $1}') && \
    ./configure \
      --prefix /opt/postgresql \
      --enable-integer-datetimes \
      --enable-option-checking=fatal \
      --enable-tap-tests \
      $([ $major_version -le 16 ] && echo "--enable-thread-safety") \
      --with-gssapi \
      $([ $major_version -ge 14 ] && echo "--with-icu" || echo "--without-icu") \
      --without-ldap \
      --with-libxml \
      --with-libxslt \
      $([ $major_version -ge 16 ] && echo "--with-llvm") \
      $([ $major_version -ge 14 ] && echo "--with-lz4") \
      --with-openssl \
      --with-pgport=5432 \
      $([ $major_version -ge 15 ] && echo "--with-python") \
      --with-readline \
      --with-system-tzdata=/usr/share/zoneinfo \
      --with-uuid=ossp \
      $([ $major_version -ge 16 ] && echo "--with-zstd") && \
    make $([ $major_version -ge 15 ] && echo "world-bin") && \
    make $([ $major_version -ge 15 ] && echo "install-world-bin" || echo "install") && \
    make -C contrib install

# Update binary rpath to use a relative path.
# LD_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' should be used instead, but does not appear to work.
RUN cd /opt/postgresql/bin && \
    rpath=$(patchelf --print-rpath postgres | sed 's|/opt/postgresql/lib|$ORIGIN/../lib|g') && \
    find ./ -type f -print0 | while IFS= read -r -d '' file; do patchelf --set-rpath $rpath $file; done

RUN cp /usr/src/postgresql/COPYRIGHT /opt/postgresql

# Create user and group for running tests
RUN addgroup -S -g 1000 postgresql && \
    adduser -D -S -G postgresql -u 1000 -s /bin/ash postgresql && \
    mkdir -p /opt/test && \
    chown postgresql:postgresql /opt/test

USER postgresql
